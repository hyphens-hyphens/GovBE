// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace GovBE.Models;

public partial class GovBE_DatabaseContext : DbContext
{
    public GovBE_DatabaseContext(DbContextOptions<GovBE_DatabaseContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Adslocation> Adslocations { get; set; }

    public virtual DbSet<Adslocationpicture> Adslocationpictures { get; set; }

    public virtual DbSet<Adslocationupdate> Adslocationupdates { get; set; }

    public virtual DbSet<Adsnew> Adsnews { get; set; }

    public virtual DbSet<Adsnewpicture> Adsnewpictures { get; set; }

    public virtual DbSet<Reportwarning> Reportwarnings { get; set; }

    public virtual DbSet<Reportwarningurl> Reportwarningurls { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder
            .UseCollation("utf8mb4_0900_ai_ci")
            .HasCharSet("utf8mb4");

        modelBuilder.Entity<Adslocation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("adslocation");

            entity.Property(e => e.AdsAddress)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.CreateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.EndDate).HasColumnType("datetime");
            entity.Property(e => e.IsActive)
                .HasDefaultValueSql("b'1'")
                .HasColumnType("bit(1)");
            entity.Property(e => e.LastUpdateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.Latitute).HasPrecision(10);
            entity.Property(e => e.Longtitute).HasPrecision(10);
            entity.Property(e => e.SizeUnit)
                .HasMaxLength(20)
                .IsFixedLength();
        });

        modelBuilder.Entity<Adslocationpicture>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("adslocationpicture");

            entity.Property(e => e.HinhAnh).HasColumnType("mediumblob");
        });

        modelBuilder.Entity<Adslocationupdate>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("adslocationupdate");

            entity.Property(e => e.Comment)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.CreateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.Date).HasColumnType("datetime");
        });

        modelBuilder.Entity<Adsnew>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("adsnew");

            entity.Property(e => e.AdsAddress)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.City)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.Comment)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.CompanyAddress)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.CompanyInfo)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.CreateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .IsFixedLength();
            entity.Property(e => e.District)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.Email)
                .HasMaxLength(60)
                .IsFixedLength();
            entity.Property(e => e.IsActive)
                .HasDefaultValueSql("b'1'")
                .HasColumnType("bit(1)");
            entity.Property(e => e.LastUpdateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.Latitute).HasPrecision(10);
            entity.Property(e => e.Longtitute).HasPrecision(10);
            entity.Property(e => e.Name)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.NgayBatDauHd).HasColumnType("datetime");
            entity.Property(e => e.NgayKetThucHd).HasColumnType("datetime");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.SizeUnit)
                .HasMaxLength(20)
                .IsFixedLength();
            entity.Property(e => e.Ward)
                .HasMaxLength(100)
                .IsFixedLength();
        });

        modelBuilder.Entity<Adsnewpicture>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("adsnewpicture");

            entity.Property(e => e.HinhAnh).HasColumnType("mediumblob");
        });

        modelBuilder.Entity<Reportwarning>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("reportwarning");

            entity.Property(e => e.Comment)
                .HasMaxLength(200)
                .IsFixedLength();
            entity.Property(e => e.CreateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.FullName)
                .HasMaxLength(100)
                .IsFixedLength();
            entity.Property(e => e.IsActive)
                .HasDefaultValueSql("b'1'")
                .HasColumnType("bit(1)");
            entity.Property(e => e.LastUpdateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(100)
                .IsFixedLength();
        });

        modelBuilder.Entity<Reportwarningurl>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PRIMARY");

            entity.ToTable("reportwarningurl");

            entity.Property(e => e.CreateOnUtc).HasColumnType("datetime");
            entity.Property(e => e.Url)
                .HasMaxLength(200)
                .IsFixedLength();
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}